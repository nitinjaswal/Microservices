
-dotnet build:Build dot net project with command line
-dotnet run: run project
-dotnet --version: checks current version
-dotnet new webapi -n PlatformService (Will create new scaffolding project)
-dotnet add package AutoMapper.Extensions.Microsoft.DependencyInjection
-dotnet add package Microsoft.EntityFrameworkCore
-dotnet add package Microsoft.EntityFrameworkCore.Design
-dotnet add package Microsoft.EntityFrameworkCore.InMemory
-dotnet add package Microsoft.EntityFrameworkCore.SqlServer

//VS code shortcuts
-ctrl+shift+~: open terminal
-ctrl+b: toggle directory(folder) explorer

//Docker
--docker --version
--docker build -t jaswalnitin/platformservice .: It will create docker image
--docker run -p 8080:80 -d  jaswalnitin/platformservice: run the image in docker new container
--docker ps:show running container
--docker stop <containerid>: stop the container
--docker start <containerid>: restart existing container
--docker login: authenticate docker hub with
--docker push jaswalnitin/platformservice: is used to push or share a local Docker image or a repository to a central repository

//kubernetes
--kubectl version :  
--kubectl apply -f platforms-depl.yaml: Create deployment file and deployment
--kubectl get deployments: Check deployment files
--kubectl get pods: check pods
--kubectl get services: 
--kubectl rollout restart deployment platforms-depl: restart pod and get latest image
--kubectl get pods --namespace=ingress-nginx: check pods and its associated namespace
--kubectl get services --namespace=ingress-nginx: check load balancer for service
